# Generated by Django 5.2.7 on 2025-10-10 05:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [  # noqa: RUF012
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [  # noqa: RUF012
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Tag name (unique) / Nome da tag (único)",
                        max_length=50,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier (auto-generated) / Identificador amigável para URL (auto-gerado)",
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6c757d",
                        help_text="Hex color code for badge display / Código de cor hex para exibição do badge",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Tag creation date / Data de criação da tag",
                        verbose_name="Created at",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Category name (unique) / Nome da categoria (único)",
                        max_length=100,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier (auto-generated) / Identificador amigável para URL (auto-gerado)",
                        max_length=100,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Category description / Descrição da categoria",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Active status / Status ativo",
                        verbose_name="Active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent category for hierarchical structure / Categoria pai para estrutura hierárquica",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.category",
                        verbose_name="Parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="User biography (max 500 chars) / Biografia do usuário (máx 500 chars)",
                        max_length=500,
                        verbose_name="Biography",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Profile picture / Foto de perfil",
                        null=True,
                        upload_to="avatars/%Y/%m/%d/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Phone number with country code / Número de telefone com código do país",
                        max_length=20,
                        verbose_name="Phone",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True,
                        help_text="User's birth date / Data de nascimento do usuário",
                        null=True,
                        verbose_name="Birth date",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="User's city / Cidade do usuário",
                        max_length=100,
                        verbose_name="City",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="User's country / País do usuário",
                        max_length=100,
                        verbose_name="Country",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Personal website or portfolio / Website pessoal ou portfólio",
                        verbose_name="Website",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if user is verified / Indica se usuário é verificado",
                        verbose_name="Verified",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Profile creation date / Data de criação do perfil",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Last update date / Data da última atualização",
                        verbose_name="Updated at",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Related Django user / Usuário Django relacionado",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="The name of the product (max 100 characters)",
                        max_length=100,
                        verbose_name="Product Name",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Product price in currency units",
                        max_digits=10,
                        verbose_name="Price",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the product was created",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the product was last updated",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indicates if the product is active",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="core.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this product",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_products",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Product tagso",
                        related_name="products",
                        to="core.tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["-created_at"],
                "permissions": [
                    ("can_deactivate_product", "Can deactivate product"),
                    ("can_set_special_price", "Can set special pricing"),
                ],
                "indexes": [
                    models.Index(
                        fields=["is_active", "-created_at"], name="active_created_idx"
                    ),
                    models.Index(fields=["name"], name="name_idx"),
                    models.Index(fields=["price"], name="price_idx"),
                ],
            },
        ),
    ]
